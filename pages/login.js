import { useEffect } from 'react';
import { useRouter } from 'next/router';
import { login_user, check_auth } from '@/services';
import Head from 'next/head';
import { useState } from 'react';
import { ToastContainer, toast } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';
import Cookies from 'js-cookie';
import Link from 'next/link';

export default function Home() {
  const [formData, setFormData] = useState({ email: "", password: "" });
  const router = useRouter();

  useEffect(() => {
    const checkAuthentication = async () => {
      const res = await check_auth();
      if (res.isAuthenticated) {
        router.push("/mydashboard");
      }
    };

    checkAuthentication();
  }, []); 

  const handleSubmit = async (e) => {
    e.preventDefault();
    const res = await login_user(formData);
    if (res.success) {
      toast.success(res.message);
      localStorage.setItem("authToken", res.token);
      setTimeout(() => {
        console.log("this is work 1")
          router.push("/mydashboard");
      }, 1000);

      Cookies.set("token", res.token);
      setTimeout(() => {
        console.log("this is work 1")
        router.push("/mydashboard");
      }, 1000);
    } else {
      toast.error(res.message);
    }
  };

  return (
    <>
      <Head>
        <title>Login System</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <section className="vh-100 d-flex align-items-center justify-content-center">
        <div className="container">
          <div className="row justify-content-center">
            <div className="col-md-6">
              <div className="card shadow-lg">
                <div className="card-body">
                  <h2 className="card-title text-center mb-4">Sign in to your account</h2>
                  <form onSubmit={handleSubmit}>
                    <div className="mb-3">
                      <label htmlFor="email" className="form-label">Your email</label>
                      <input onChange={(e) => setFormData({ ...formData, email: e.target.value })} type="email" name="email" id="email" className="form-control" placeholder="name@company.com" required />
                    </div>
                    <div className="mb-3">
                      <label htmlFor="password" className="form-label">Password</label>
                      <input onChange={(e) => setFormData({ ...formData, password: e.target.value })} type="password" name="password" id="password" placeholder="••••••••" className="form-control" required />
                    </div>
                    <div className="mb-3 form-check">
                      <input type="checkbox" id="remember" name="remember" className="form-check-input" />
                      <label htmlFor="remember" className="form-check-label">Remember me</label>
                    </div>
                    <div className="mb-3 text-end">
                      <a href="#" className="text-primary">Forgot password?</a>
                    </div>
                    <button type="submit" className="btn btn-primary w-100">Sign in</button>
                  </form>
                  <p className="text-center mt-3">
                    Don’t have an account yet? <Link href="/register" className="text-primary">Sign up</Link>
                  </p>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>
      <ToastContainer />
    </>
  );
}
